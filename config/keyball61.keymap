#define DEFAULT 0
#define SYM     1
#define FUN     2
#define MOUSE   3
#define SCROLL  4
#define SNIPE   5

#include <behaviors/mouse_keys.dtsi>
#include <dt-bindings/zmk/mouse.h>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/backlight.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>
#include <dt-bindings/zmk/rgb.h>

&lt {
    tapping-term-ms = <240>;
    flavor = "balanced";
    quick-tap-ms = <150>;
};

&mt {
    tapping-term-ms = <200>;
    flavor = "tap-preferred";
    quick-tap-ms = <150>;
};

/ {
    combos {
        compatible = "zmk,combos";

        LG1 {
            bindings = <&kp LANGUAGE_1>;
            key-positions = <29 30>;
        };

        LG2 {
            bindings = <&kp LANGUAGE_2>;
            key-positions = <17 18>;
        };

        LG3 {
            bindings = <&kp LANGUAGE_3>;
            key-positions = <5 6>;
        };

        Bootloader_mode {
            bindings = <&bootloader>;
            key-positions = <9 10 11>;
        };

        System_reset {
            bindings = <&sys_reset>;
            key-positions = <21 22 23>;
        };

        Volume_down {
            bindings = <&kp C_VOLUME_DOWN>;
            key-positions = <41 42>;
        };

        Volume_up {
            bindings = <&kp C_VOLUME_UP>;
            key-positions = <43 44>;
        };

        Brightness_down {
            bindings = <&kp C_BRIGHTNESS_DEC>;
            key-positions = <40 41 42>;
        };

        Brightness_up {
            bindings = <&kp C_BRIGHTNESS_INC>;
            key-positions = <43 44 45>;
        };

        Backlit_down {
            bindings = <&bl BL_DEC>;
            key-positions = <42 41 40 39>;
        };

        Backlit_up {
            bindings = <&bl BL_INC>;
            key-positions = <43 44 45 46>;
        };

        Bluetooth1 {
            bindings = <&bt BT_SEL 0>;
            key-positions = <0 1 2>;
        };

        Bluetooth2 {
            bindings = <&bt BT_SEL 1>;
            key-positions = <12 13 14>;
        };

        Bluetooth3 {
            bindings = <&bt BT_SEL 2>;
            key-positions = <24 25 26>;
        };

        Bluetooth4 {
            bindings = <&bt BT_SEL 3>;
            key-positions = <36 37 38>;
        };

        Bluetooth5 {
            bindings = <&bt BT_SEL 4>;
            key-positions = <50 51 52>;
        };

        Previous {
            bindings = <&kp C_PREVIOUS>;
            key-positions = <42 41 40 39 38>;
        };

        Next {
            bindings = <&kp C_NEXT>;
            key-positions = <43 44 45 46 47>;
        };

        Previous_right {
            bindings = <&kp C_PREVIOUS>;
            key-positions = <49 60>;
        };

        Next_right {
            bindings = <&kp C_NEXT>;
            key-positions = <35 23>;
        };
    };

    behaviors {
        HMR: HMR {
            compatible = "zmk,behavior-hold-tap";
            label = "HMR";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            flavor = "tap-preferred";
            tapping-term-ms = <200>;
            quick-tap-ms = <175>;
            hold-trigger-on-release;
            hold-trigger-key-positions = <0 1 5 12 13 14 15 16 17 24 25 26 27 28 29 36 37 38 39 40 41 42 50 51 52 53 54 55 56 2 3 4 57 58>;
        };

        HML: HML {
            compatible = "zmk,behavior-hold-tap";
            label = "HML";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <260>;
            quick-tap-ms = <235>;
            flavor = "tap-preferred";
            hold-trigger-key-positions = <0 1 2 4 5 6 7 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 3 8>;
            hold-trigger-on-release;
        };

        HMI: HMI {
            compatible = "zmk,behavior-hold-tap";
            label = "HMI";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <240>;
            quick-tap-ms = <215>;
            flavor = "tap-preferred";
            hold-trigger-on-release;
            hold-trigger-key-positions = <0 1 2 3 4 5 12 13 14 15 16 17 24 25 26 27 28 29 36 37 38 39 40 41 42 50 51 52 53 54 55 56 57 58>;
        };

        HMS: HMS {
            compatible = "zmk,behavior-hold-tap";
            label = "HMS";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <220>;
            quick-tap-ms = <195>;
            flavor = "tap-preferred";
            hold-trigger-key-positions = <0 1 2 3 4 5 12 13 14 15 16 17 24 25 26 27 28 29 36 37 38 39 40 41 42 50 51 52 53 54 55 56 57 58>;
            hold-trigger-on-release;
        };

        MOT: MOT {
            compatible = "zmk,behavior-hold-tap";
            label = "MOT";
            bindings = <&mo>, <&mo>;

            #binding-cells = <2>;
            hold-trigger-key-positions = <0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60>;
            hold-trigger-on-release;
            flavor = "tap-preferred";
            tapping-term-ms = <400>;
            quick-tap-ms = <375>;
        };
    };

    macros {
        end_doc: end_doc {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&none>, <&macro_press>;

            label = "END_DOC";
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            label = "QWRT";
            bindings = <
&HMS ESCAPE GRAVE                 &HMR F1 N1                  &HMR F2 N2    &HMR F3 N3        &HMR F4 N4        &HMR F5 N5                                    &HMR F6 N6       &HMR F7 N7        &HMR F8 N8               &HMR F9 N9        &HMR F10 N0         &kp BSPC
&kp TAB                           &HMI EXCLAMATION Q          &HMI TILDE W  &HMI LG(E) E      &HMI LG(R) R      &HMI LA(SPACE) T                              &HMR PLUS Y      &HMR UNDER U      &HMI LG(I) I             &HMI LG(N) O      &HML LG(LS(S)) P    &HMI F11 GRAVE
&kp LEFT_SHIFT                    &HMI LG(A) A                &HMI LG(S) S  &HML LG(D) D      &HMI LS(LC(A)) F  &HMI LC(LS(B)) G                              &HMR MINUS H     &HMR EQUAL J      &HMI LG(K) K             &HMI BACKSLASH L  &HMR QUESTION SEMI  &HMR SLASH SQT
&kp LEFT_CONTROL                  &HMI LA(SPACE) Z            &HMI LG(X) X  &HMI LC(LS(C)) C  &HMI LC(LS(V)) V  &HMI LC(LA(B)) B  &kp PAGE_DOWN  &kp PAGE_UP  &HMI LG(M) N     &HMI LS(LG(M)) M  &HMS GREATER_THAN COMMA  &HMS PIPE DOT     &kp LEFT_ARROW      &kp RIGHT
&HMR CAPSLOCK LC(LG(LEFT_ARROW))  &HMR LG(TAB) LG(LC(RIGHT))  &kp LEFT_ALT  &kp LEFT_WIN      &mo 3             &lt 4 SPACE       &mo 5          &kp ENTER    &lt 2 BACKSPACE                                                               &kp DOWN_ARROW      &kp UP_ARROW
            >;
        };

        number_layer {
            bindings = <
&trans  &kp N1    &kp N2    &kp N3  &kp N4     &kp N5                  &kp N6  &kp N7  &kp N8  &kp N9  &kp N0  &trans
&trans  &trans    &trans    &trans  &trans     &trans                  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &kp LEFT  &kp DOWN  &kp UP  &kp RIGHT  &trans                  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans    &trans    &trans  &trans     &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans    &trans    &trans  &trans     &trans  &trans  &trans  &trans                          &trans  &trans
            >;

            label = "NUM";
        };

        symbol_layer {
            label = "SYM";
            bindings = <
&kt ESCAPE       &kp EXCLAMATION  &kp AT_SIGN                      &kp HASH                           &kp DOLLAR     &kp PERCENT                                               &kp CARET             &kp AMPERSAND   &kp ASTERISK        &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS      &kp DELETE
&bt BT_CLR       &bt BT_SEL 0     &bt BT_SEL 1                     &bt BT_SEL 2                       &bt BT_SEL 3   &bt BT_SEL 4                                              &kp PLUS              &kp UNDERSCORE  &kp C_FAST_FORWARD  &kp LEFT_BRACKET      &HML INSERT RIGHT_BRACKET  &kp LC(F4)
&bt BT_CLR_ALL   &bt BT_DISC 0    &bt BT_DISC 1                    &bt BT_DISC 2                      &bt BT_DISC 3  &bt BT_DISC 4                                             &kp MINUS             &kp EQUAL       &kp C_REWIND        &kp LEFT_BRACE        &kp RIGHT_BRACE            &kp LA(LG(F4))
&bl BL_OFF       &bl BL_ON        &rgb_ug RGB_EFR                  &kp C_PREVIOUS                     &bl BL_DEC     &kp C_BRIGHTNESS_DEC  &kp C_VOLUME_DOWN  &kp C_VOLUME_UP  &kp C_BRIGHTNESS_INC  &bl BL_INC      &kp C_NEXT          &rgb_ug RGB_EFF       &kp LG(LEFT_ARROW)         &kp LG(RIGHT_ARROW)
&rgb_ug RGB_OFF  &rgb_ug RGB_ON   &rgb_ug RGB_COLOR_HSB(0,100,50)  &rgb_ug RGB_COLOR_HSB(136,100,50)  &kp LG(SPACE)  &trans                &kp C_MUTE         &trans           &trans                                                                          &kp LG(DOWN_ARROW)         &kp LG(UP_ARROW)
            >;
        };

        function_layer {
            label = "FUN";
            bindings = <
&kp F12           &kp F1  &kp F2  &kp F3  &kp F4  &kp F5                                       &kp F6           &kp F7  &kp F8  &kp F9  &kp F10      &kp F11
&kp F12           &kp F1  &kp F2  &kp F3  &kp F4  &kp F5                                       &kp F6           &kp F7  &kp F8  &kp F9  &kp F10      &kp F11
&kp LEFT_SHIFT    &trans  &trans  &trans  &mo 6   &trans                                       &trans           &trans  &trans  &trans  &trans       &trans
&kp LEFT_CONTROL  &trans  &trans  &trans  &mo 6   &kp LC(LS(HOME))  &kp LS(END)  &kp LS(HOME)  &kp LC(LS(END))  &trans  &trans  &trans  &kp HOME     &kp END
&trans            &trans  &trans  &trans  &trans  &trans            &trans       &trans        &trans                                   &kp LC(END)  &kp LC(HOME)
            >;
        };

        mouse_layer {
            label = "MOUSE";
            bindings = <
&trans  &trans    &trans    &trans  &trans     &trans                              &trans         &trans     &trans     &trans     &trans     &trans
&trans  &trans    &trans    &trans  &trans     &trans                              &kp PAGE_UP    &trans     &trans     &trans     &trans     &trans
&trans  &kp LEFT  &kp DOWN  &kp UP  &kp RIGHT  &mo 6                               &mkp LCLK      &mkp LCLK  &mkp RCLK  &mkp RCLK  &mkp MCLK  &trans
&trans  &trans    &trans    &trans  &trans     &mo 6   &kp PAGE_DOWN  &kp PAGE_UP  &kp PAGE_DOWN  &trans     &trans     &trans     &trans     &trans
&trans  &trans    &trans    &trans  &trans     &trans  &mo 6          &trans       &mo 3                                           &trans     &trans
            >;
        };

        scroll_layer {
            label = "SCROLL";
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans                  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans                  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans                  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans  &trans                          &trans  &trans
            >;
        };

        snipe_layer {
            label = "SNIPE";
            bindings = <
&trans  &trans    &trans    &trans        &trans           &trans                  &trans         &trans     &trans     &trans     &trans     &trans
&trans  &trans    &trans    &trans        &trans           &trans                  &kp PAGE_UP    &trans     &trans     &trans     &trans     &trans
&trans  &kp LEFT  &kp DOWN  &kp UP_ARROW  &kp RIGHT_ARROW  &trans                  &mkp LCLK      &mkp LCLK  &mkp RCLK  &mkp RCLK  &mkp MCLK  &trans
&trans  &trans    &trans    &trans        &trans           &trans  &trans  &trans  &kp PAGE_DOWN  &trans     &trans     &trans     &trans     &trans
&trans  &trans    &trans    &trans        &trans           &trans  &trans  &trans  &trans                                          &trans     &trans
            >;
        };
    };
};
